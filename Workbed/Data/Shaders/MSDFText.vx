cbuffer GlobalData
{
	Matrix Projection;
};

cbuffer ObjectData
{
	Matrix World;	
	float4 Color;
	float2 Position;
	float2 Size;
};

struct PosVertex
{
	float4 Position : POSITION;
	float2 Tex : TEXCOORD;
};

struct PosColorPixel
{
	float4 Position : SV_POSITION;
	float4 Color : COLOR;
	float2 Tex : TEXCOORD0;
};

PosColorPixel main(PosVertex aInput)
{
	PosColorPixel output;

	output.Position = aInput.Position;

	//Scale it up from 1x1 to SizeX x SizeY
	output.Position.xy *= 3.f;

	//Movement
	output.Position.x += Position.x;
	output.Position.y -= Position.y;
	output.Position.y += 3;

	output.Position = mul(Projection, output.Position);

	output.Position.x -= 1;
	output.Position.y += 1;

	output.Color = Color;
	output.Tex = aInput.Tex;
	return output;
};