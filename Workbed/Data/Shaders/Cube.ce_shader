cbuffer GlobalData
{
	Matrix View;
	Matrix Projection;
};

cbuffer ObjectData
{
	Matrix World;	
	float4 Color;
	float4 Scale;
};

struct PosNormColorVertex
{
	float4 Position : POSITION;
	float4 Normal : NORMAL;
	float4 Color : COLOR;
};

struct PosNormColorPixel
{
	float4 Position : SV_POSITION;
	float4 Normal : NORMAL;
	float4 Color : COLOR;
};

struct GBuffer
{
	float4 AlbedoMetalness;
	float4 NormalRoughness;
	float Depth;
};


PosNormColorPixel VS(PosNormColorVertex aInput)
{
	PosNormColorPixel output;

	aInput.Position.w = 1.f;
	aInput.Position.xyz *= Scale.xyz;
	output.Position = mul(World, aInput.Position);
	output.Position = mul(View, output.Position);
	output.Position = mul(Projection, output.Position);


	output.Normal = aInput.Normal;
	output.Color = Color;
	return output;
};


GBuffer PS(PosNormColorPixel anInput) : SV_TARGET
{
	GBuffer output;
	output.AlbedoMetalness = anInput.Color;
	output.AlbedoMetalness.w = 1.f;

	output.NormalRoughness = anInput.Normal;
	output.NormalRoughness.w = 0.f;

	output.Depth = anInput.Position.z;
	return output;
};