cbuffer GlobalData
{
	Matrix View;
	Matrix Projection;
};

cbuffer ObjectData
{
	Matrix World;	
	float4 Color;
};

struct PosNormColorVertex
{
	float4 Position : POSITION;
	float4 Normal : NORMAL;
	float4 Color : COLOR;
};

struct PosNormColorPixel
{
	float4 Position : SV_POSITION;
	float4 Normal : NORMAL;
	float4 Color : COLOR;
};


PosNormColorPixel VS(PosNormColorVertex aInput)
{
	PosNormColorPixel output;

	aInput.Position.w = 1.f;
	output.Position = mul(World, aInput.Position);
	output.Position = mul(View, output.Position);
	output.Position = mul(Projection, output.Position);


	output.Normal = aInput.Normal;
	output.Color = Color;
	return output;
};


float4 PS(PosNormColorPixel anInput) : SV_TARGET
{
	//return Color;
	//float4 color = float4(abs(anInput.Normal.xyz), 1.f);
	//return color;
	return anInput.Color;
};