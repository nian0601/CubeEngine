cbuffer GlobalData
{
	Matrix Projection;
};

cbuffer ObjectData
{
	float4 Color;
	float2 Position;
	float2 Size;
	float2 Hotspot;
	float2 padding;
};

struct PosUVVertex
{
	float4 Position : POSITION;
	float2 TextureCoord : TEXCOORD;
};

struct PosColorPixel
{
	float4 Position : SV_POSITION;
	float4 Color : COLOR;
	float2 TextureCoord : TEXCOORD;
};

PosColorPixel main(PosUVVertex aInput)
{
	PosColorPixel output;

	output.Position = aInput.Position;

	//Scale it up from 1x1 to SizeX x SizeY
	//output.Position.xy *= Size;

	//Move 0,0 to TopLeft
	//output.Position.x += Size.x;
	//output.Position.y -= Size.y;

	//Movement
	//output.Position.x += Position.x;
	//output.Position.y -= Position.y;

	//output.Position = mul(Projection, output.Position);

	//output.Position.x -= 1;
	//output.Position.y += 1;
	//output.Position.x *= -1;
	//output.Position.y *= -1;

	output.Color = Color;
	output.TextureCoord = aInput.TextureCoord;
	return output;
};